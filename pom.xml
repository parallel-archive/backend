<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.5.4</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<groupId>hu.codeandsoda.osa</groupId>
	<artifactId>osa-backend</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>jar</packaging>
	<name>osa-backend</name>
	<description>OSA Backend Project</description>
	<properties>
		<java.version>1.8</java.version>
		<sonar.login>admin</sonar.login>
		<sonar.password>osa54321</sonar.password>
		<swagger2markup.version>1.2.0</swagger2markup.version>
        <asciidoctor.input.directory>${project.basedir}/src/docs/asciidoc</asciidoctor.input.directory>

<!--         <swagger.output.dir>${project.build.directory}/swagger</swagger.output.dir> -->
        <swagger.output.dir>${project.basedir}/src/main/resources/api-documentation</swagger.output.dir>
        <swagger.snippetOutput.dir>${project.build.directory}/asciidoc/snippets</swagger.snippetOutput.dir>
        <generated.asciidoc.directory>${project.build.directory}/asciidoc/generated</generated.asciidoc.directory>
<!--         <asciidoctor.html.output.directory>${project.build.directory}/asciidoc/html</asciidoctor.html.output.directory> -->
        <asciidoctor.html.output.directory>${project.basedir}/src/main/resources/api-documentation</asciidoctor.html.output.directory>

        <swagger.input>${swagger.output.dir}/swagger.json</swagger.input>
	</properties>
	
	<pluginRepositories>
        <pluginRepository>
            <id>jcenter-snapshots</id>
            <name>jcenter</name>
            <url>https://oss.jfrog.org/artifactory/oss-snapshot-local/</url>
        </pluginRepository>
        <pluginRepository>
            <id>jcenter-releases</id>
            <name>jcenter</name>
            <url>https://jcenter.bintray.com</url>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </pluginRepository>
    </pluginRepositories>

    <repositories>
        <repository>
            <id>jcentral</id>
            <name>bintray</name>
            <url>https://jcenter.bintray.com</url>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>
        <repository>
            <id>jcenter-snapshots</id>
            <name>jcenter</name>
            <url>https://oss.jfrog.org/artifactory/oss-snapshot-local/</url>
        </repository>
    </repositories>
    
    <dependencyManagement>
	  <dependencies>
	    <dependency>
	      <groupId>com.google.cloud</groupId>
	      <artifactId>libraries-bom</artifactId>
	      <version>24.1.0</version>
	      <type>pom</type>
	      <scope>import</scope>
	    </dependency>
	  </dependencies>
	</dependencyManagement>
    
	
	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-security</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-validation</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-thymeleaf</artifactId>
		</dependency>
		<dependency>
		    <groupId>org.thymeleaf.extras</groupId>
		    <artifactId>thymeleaf-extras-springsecurity5</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<scope>runtime</scope>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.mariadb.jdbc</groupId>
			<artifactId>mariadb-java-client</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-tomcat</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
		    <groupId>org.mockito</groupId>
		    <artifactId>mockito-inline</artifactId>
		    <version>3.6.28</version>
		    <scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
		    <groupId>org.springframework.boot</groupId>
		    <artifactId>spring-boot-starter-mail</artifactId>
		</dependency>
		<dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-activemq</artifactId>
        </dependency>
        <dependency>
		    <groupId>org.springframework.boot</groupId>
		    <artifactId>spring-boot-starter-cache</artifactId>
		</dependency>
		<dependency>
            <groupId>io.swagger</groupId>
            <artifactId>swagger-annotations</artifactId>
            <version>1.5.20</version>
        </dependency>
         <dependency>
		    <groupId>io.springfox</groupId>
		    <artifactId>springfox-boot-starter</artifactId>
		    <version>3.0.0</version>
		</dependency>
        <dependency>
            <groupId>io.springfox</groupId>
            <artifactId>springfox-staticdocs</artifactId>
            <version>2.6.1</version>
            <exclusions>
            	<exclusion>
            		<groupId>javax.mail</groupId>
            		<artifactId>mailapi</artifactId>
            	</exclusion>
            </exclusions>
        </dependency>
         <dependency>
            <groupId>org.springframework.restdocs</groupId>
            <artifactId>spring-restdocs-mockmvc</artifactId>
        </dependency>
         <dependency>
            <groupId>io.github.swagger2markup</groupId>
            <artifactId>swagger2markup-spring-restdocs-ext</artifactId>
            <version>${swagger2markup.version}</version>
            <scope>test</scope>
        </dependency>
		<dependency>
		    <groupId>com.amazonaws</groupId>
		    <artifactId>aws-java-sdk</artifactId>
		    <version>1.12.79</version>
		</dependency>
		<dependency>
		  <groupId>net.coobird</groupId>
		  <artifactId>thumbnailator</artifactId>
		  <version>[0.4, 0.5)</version>
		</dependency>
		<dependency>
		  <groupId>org.apache.pdfbox</groupId>
		  <artifactId>pdfbox</artifactId>
		  <version>2.0.22</version>
		</dependency>
		<dependency>
			<groupId>com.google.cloud</groupId>
		    <artifactId>google-cloud-vision</artifactId>
		</dependency>
		<dependency>
		  <groupId>org.springframework.boot</groupId>
		  <artifactId>spring-boot-starter-data-elasticsearch</artifactId>
		</dependency>
		<dependency>
		    <groupId>org.springframework.boot</groupId>
		    <artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>
		<dependency>
		    <groupId>io.micrometer</groupId>
		    <artifactId>micrometer-registry-prometheus</artifactId>
		</dependency>
		<dependency>
		  <groupId>org.apache.activemq</groupId>
		  <artifactId>activemq-spring</artifactId>
		</dependency>
		
	</dependencies>
	
	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
			<plugin>
		        <groupId>org.apache.maven.plugins</groupId>
		        <artifactId>maven-resources-plugin</artifactId>
		        <configuration>
		          <nonFilteredFileExtensions>
		            <nonFilteredFileExtension>otf</nonFilteredFileExtension>
		          </nonFilteredFileExtensions>
		        </configuration>
		      </plugin>
		</plugins>
		<pluginManagement>
      		<plugins>
       			<plugin>
         			<groupId>org.apache.maven.plugins</groupId>
          			<artifactId>maven-surefire-plugin</artifactId>
          			<configuration>
            			<forkCount>3</forkCount>
           				<reuseForks>true</reuseForks>
           				<groups>${include.groups}</groups>
          			</configuration>
        		</plugin>
       			<plugin>
          			<artifactId>maven-war-plugin</artifactId>
          			<version>3.3.2</version>
          			<configuration>
            			<failOnMissingWebXml>false</failOnMissingWebXml>
            			<archive>
	              			<manifest>
	               				<mainClass>${start-class}</mainClass>
	                			<addDefaultImplementationEntries>true</addDefaultImplementationEntries>
	              			</manifest>
	              			<manifestEntries>
	             				<Application-buildBranch>${env.BITBUCKET_BRANCH}</Application-buildBranch>
	              				<Application-buildNumber>${env.BITBUCKET_BUILD_NUMBER}</Application-buildNumber>
	  			 			</manifestEntries>
            			</archive>
          			</configuration>
        		</plugin>
			</plugins>
    	</pluginManagement>
    	<resources>
      		<resource>
        		<directory>src/main/resources</directory>
        		<filtering>true</filtering>
      		</resource>
    	</resources>
		<finalName>osa-backend-${project.version}-${env.BITBUCKET_BRANCH}-${env.BITBUCKET_BUILD_NUMBER}</finalName>
	</build>

    
    <profiles>
	    <profile>
		    <id>dev</id>
		    <activation>
		        <activeByDefault>true</activeByDefault>
		    </activation>
			<properties>
		    	<activatedProperties>dev</activatedProperties>
		    </properties>
		</profile>
		<profile>
		    <id>unittest</id>
			<properties>
		    	<activatedProperties>unittest</activatedProperties>
		    </properties>
		</profile>
	    <profile>
	      <id>apidoc</id>
	      <properties>
	        <activatedProperties>apidoc</activatedProperties>
	      </properties>
	      <build>
		        <plugins>
		            <plugin>
		                <groupId>org.apache.maven.plugins</groupId>
		                <artifactId>maven-surefire-plugin</artifactId>
		                <configuration>
		                    <systemPropertyVariables>
		                        <io.springfox.staticdocs.outputDir>${swagger.output.dir}</io.springfox.staticdocs.outputDir>
		                        <io.springfox.staticdocs.snippetsOutputDir>${swagger.snippetOutput.dir}</io.springfox.staticdocs.snippetsOutputDir>
		                    </systemPropertyVariables>
		                </configuration>
		            </plugin>
		
		            <!-- First, use the swagger2markup plugin to generate asciidoc -->
		            <plugin>
		                <groupId>io.github.swagger2markup</groupId>
		                <artifactId>swagger2markup-maven-plugin</artifactId>
		                <version>${swagger2markup.version}</version>
		                <dependencies>
		                    <dependency>
		                        <groupId>io.github.swagger2markup</groupId>
		                        <artifactId>swagger2markup-import-files-ext</artifactId>
		                        <version>${swagger2markup.version}</version>
		                    </dependency>
		                    <dependency>
		                        <groupId>io.github.swagger2markup</groupId>
		                        <artifactId>swagger2markup-spring-restdocs-ext</artifactId>
		                        <version>${swagger2markup.version}</version>
		                    </dependency>
		                </dependencies>
		                <configuration>
		                    <swaggerInput>${swagger.input}</swaggerInput>
		                    <outputDir>${generated.asciidoc.directory}</outputDir>
		                    <config>
		                        <swagger2markup.markupLanguage>ASCIIDOC</swagger2markup.markupLanguage>
		                        <swagger2markup.pathsGroupedBy>TAGS</swagger2markup.pathsGroupedBy>
		
		                        <swagger2markup.extensions.dynamicOverview.contentPath>${project.basedir}/src/docs/asciidoc/extensions/overview</swagger2markup.extensions.dynamicOverview.contentPath>
		                        <swagger2markup.extensions.dynamicDefinitions.contentPath>${project.basedir}/src/docs/asciidoc/extensions/definitions</swagger2markup.extensions.dynamicDefinitions.contentPath>
		                        <swagger2markup.extensions.dynamicPaths.contentPath>${project.basedir}/src/docs/asciidoc/extensions/paths</swagger2markup.extensions.dynamicPaths.contentPath>
		                        <swagger2markup.extensions.dynamicSecurity.contentPath>${project.basedir}src/docs/asciidoc/extensions/security/</swagger2markup.extensions.dynamicSecurity.contentPath>
		
		                        <swagger2markup.extensions.springRestDocs.snippetBaseUri>${swagger.snippetOutput.dir}</swagger2markup.extensions.springRestDocs.snippetBaseUri>
		                        <swagger2markup.extensions.springRestDocs.defaultSnippets>true</swagger2markup.extensions.springRestDocs.defaultSnippets>
		                    </config>
		                </configuration>
		                <executions>
		                    <execution>
		                        <phase>test</phase>
		                        <goals>
		                            <goal>convertSwagger2markup</goal>
		                        </goals>
		                    </execution>
		                </executions>
		            </plugin>
		
		            <!-- Run the generated asciidoc through Asciidoctor to generate
		                 other documentation types, such as PDFs or HTML5 -->
		            <plugin>
		                <groupId>org.asciidoctor</groupId>
		                <artifactId>asciidoctor-maven-plugin</artifactId>
		                <version>1.5.6</version>
		                <!-- Configure generic document generation settings -->
		                <configuration>
		                    <sourceDirectory>${asciidoctor.input.directory}</sourceDirectory>
		                    <sourceDocumentName>index.adoc</sourceDocumentName>
		                    <attributes>
		                        <doctype>book</doctype>
		                        <toc>left</toc>
		                        <toclevels>3</toclevels>
		                        <numbered></numbered>
		                        <hardbreaks></hardbreaks>
		                        <sectlinks></sectlinks>
		                        <sectanchors></sectanchors>
		                        <generated>${generated.asciidoc.directory}</generated>
		                    </attributes>
		                </configuration>
		                <executions>
		                    <execution>
		                        <id>output-html</id>
		                        <phase>test</phase>
		                        <goals>
		                            <goal>process-asciidoc</goal>
		                        </goals>
		                        <configuration>
		                            <backend>html5</backend>
		                            <outputDirectory>${asciidoctor.html.output.directory}</outputDirectory>
		                        </configuration>
		                    </execution>
		                </executions>
		            </plugin>
		        </plugins>
    		</build>
	    </profile>
	</profiles>

</project>
